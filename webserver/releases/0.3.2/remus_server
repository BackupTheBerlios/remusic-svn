#!/usr/local/bin/python

PID_FILE = "/var/run/remus_server.pid"

import os, sys
pid = os.getpid()

# Is there a server already running?
if os.path.exists(PID_FILE):
    oldpid = open("/var/run/remus_server.pid").read()
    try:
        oldpid = int(oldpid)

        try:
            import signal
            os.kill(oldpid, signal.SIGINFO)
            # Seems a server is already running, exit
            print "A server is already running as pid", oldpid
            sys.exit(1)
        except OSError:
            import errno
            if sys.exc_value.errno == errno.EPERM:
                print "A server is already running as pid", oldpid
                sys.exit(1)
            elif sys.exc_value.errno != errno.ESRCH:
                # Hmm, unexpected error, lets abort
                raise

    except ValueError:
        # Hmm, garbage in the file, assuming no server is running
        pass


# Ok, we've come this far. Record our pid in the pid file, and lets start
try:
    pidfile = open(PID_FILE, "w")
    pidfile.write("%s\n" % pid)
    pidfile.close()
except:
    print >> sys.stderr, "Failed to write my pid to %s. Continuing anyhow" % \
          PID_FILE

try:
    import remus.webserver.server
finally:
    # Remove the pid file
    try:
        os.unlink(PID_FILE)
    except:
        pass

